C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\main.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated
                    -_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <device.h>
  13          
  14          /* LCD specific */
  15          #define ROW_0 0 /* LCD row 0 */
  16          #define ROW_1 1 /* LCD row 1 */
  17          #define COLUMN_0 0 /* LCD column 0 */
  18          #define COLUMN_9 9 /* LCD column 9 */
  19          #define COLUMN_10 10 /* LCD column 10 */
  20          #define COLUMN_11 11 /* LCD column 11 */
  21          #define COLUMN_12 12 /* LCD column 12 */
  22          #define COLUMN_13 13 /* LCD column 13 */
  23          #define COLUMN_14 14 /* LCD column 14 */
  24          /* For clearing Tens and Hundreds place */
  25          #define CLEAR_TENS_HUNDREDS " "
  26          /* For clearing Hundreds place */
  27          #define CLEAR_HUNDREDS " "
  28          
  29          int show = 0;
  30          uint16 voltageRawCount; 
  31          uint16 temp = 0;
  32          uint16 temp_set = 27;
  33          uint16 cold = 9999;
  34          
  35          uint8 stateB_1; 
  36          uint8 stateB_2;
  37          
  38          void UpdateDisplay(uint16 voltageRawCount, int row);
  39          void UpdateButtonState(uint8 slot_1, uint8 slot_2);
  40          
  41          /*******************************************************************************
  42          * Function Name: main
  43          ********************************************************************************
  44          *
  45          * Summary:
  46          * The main function initializes both the ADC and LCD, starts and waits for an
  47          * ADC conversion, then it displays the raw counts to the LCD.
  48          *
  49          * Parameters:
  50          * void
  51          *
  52          * Return:
  53          * void
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 2   

  54          *
  55          *******************************************************************************/
  56          
  57          void main()
  58          {
  59   1              CYGlobalIntEnable; /* Enable global interrupts */
  60   1              
  61   1              ADC_DelSig_1_Start();/* Configure and power up ADC */
  62   1              LCD_Char_1_Start(); /* Initialize and clear the LCD */
  63   1              
  64   1              /* Move the cursor to Row 0 Column 0 */
  65   1              LCD_Char_1_Position(ROW_0,COLUMN_0); 
  66   1              /* Print Label for the pot voltage raw count */
  67   1              LCD_Char_1_PrintString("TEMP NOW:    C");
  68   1              
  69   1              LCD_Char_1_Position(ROW_1,COLUMN_0);
  70   1              LCD_Char_1_PrintString("TEMP SET:    C");
  71   1              
  72   1              ADC_DelSig_1_StartConvert(); /* Force ADC to initiate a conversion */
  73   1              
  74   1              /* Start capsense and initialize baselines and enable scan */
  75   1              CapSense_Start();
  76   1              CapSense_InitializeAllBaselines();
  77   1              CapSense_ScanEnabledWidgets();
  78   1      
  79   1          /* CyGlobalIntEnable; */ /* Uncomment this line to enable global interrupts. */
  80   1              //Start the pwm;
  81   1              PWM_1_Start();
  82   1          for(;;)
  83   1          {
  84   2                      /* If scanning is completed update the baseline count and check if sensor is active */
  85   2                      while(CapSense_IsBusy());
  86   2                      
  87   2                      /* Update baseline for all the sensors */
  88   2                      CapSense_UpdateEnabledBaselines();
  89   2                      CapSense_ScanEnabledWidgets();
  90   2                      
  91   2                      /* Test if button widget is active */
  92   2                      stateB_1 = CapSense_CheckIsWidgetActive(CapSense_BUTTON0__BTN);
  93   2                      stateB_2 = CapSense_CheckIsWidgetActive(CapSense_BUTTON1__BTN);
  94   2              
  95   2              /* Wait for end of conversion */
  96   2                      ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_WAIT_FOR_RESULT);
  97   2                      /* Get converted result */
  98   2                      voltageRawCount = ADC_DelSig_1_GetResult16();
  99   2                      //Change voltageRawCount to Temperature;
 100   2                      temp = voltageRawCount / 3.870 * 0.1017 + 0.5;
 101   2                      cold = (9999 - (temp > temp_set ? temp - temp_set : 0) * 50);
 102   2                      if(cold < 1000)
 103   2                              cold = 1000;
 104   2                      if(cold > 9999)
 105   2                              cold = 9999;
 106   2                      //Change the pwm;
 107   2                      PWM_1_WriteCompare(cold);
 108   2                      /* Set range limit */
 109   2                      if (temp > 0x7FFF)
 110   2                      {
 111   3                              temp = 0;
 112   3                      }
 113   2                      else
 114   2                      {
 115   3                      /* Continue on */
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 3   

 116   3                      }
 117   2                      if(show < 10)
 118   2                      {
 119   3                              show++;
 120   3                      }
 121   2                      else
 122   2                      {
 123   3                              show = 0;
 124   3                              UpdateDisplay(temp, 0); /* Print result on LCD */
 125   3                              UpdateButtonState(stateB_1, stateB_2);
 126   3                      }
 127   2          }
 128   1      }
 129          
 130          /*******************************************************************************
 131          * Function Name: UpdateDisplay
 132          ********************************************************************************
 133          *
 134          * Summary:
 135          * Print voltage raw count result to the LCD. Clears some characters if
 136          * necessary.
 137          *
 138          * Parameters:
 139          * voltageRawCount: The voltage raw counts being received from the ADC
 140          *
 141          * Return:
 142          * void
 143          *
 144          *******************************************************************************/
 145          void UpdateDisplay (uint16 voltageRawCount, int row)
 146          {
 147   1              /* Move the cursor to Row 0 Column 0 */
 148   1              LCD_Char_1_Position(ROW_0,COLUMN_0); 
 149   1              /* Print Label for the pot voltage raw count */
 150   1              LCD_Char_1_PrintString("TEMP NOW:");
 151   1              
 152   1              LCD_Char_1_Position(ROW_0,COLUMN_13); 
 153   1              LCD_Char_1_PrintString("C");
 154   1              
 155   1              LCD_Char_1_Position(ROW_1,COLUMN_0);
 156   1              LCD_Char_1_PrintString("TEMP SET:    C");
 157   1      
 158   1              /* Move the cursor to Row 0, Column 10 */
 159   1              LCD_Char_1_Position(row,COLUMN_10);
 160   1              /* Print the result */
 161   1              LCD_Char_1_PrintNumber(voltageRawCount); 
 162   1              
 163   1              if (voltageRawCount < 10)
 164   1              {
 165   2                      /* Move the cursor to Row 0, Column 11 */
 166   2                      LCD_Char_1_Position(row,COLUMN_11);
 167   2                      LCD_Char_1_PrintString(CLEAR_TENS_HUNDREDS); /* Clear last characters */
 168   2              }
 169   1              else if (voltageRawCount < 100)
 170   1              {
 171   2                      /* Move the cursor to Row 0, Column 12 */
 172   2                      LCD_Char_1_Position(row,COLUMN_12);
 173   2                      LCD_Char_1_PrintString(CLEAR_HUNDREDS); /* Clear last characters */
 174   2              }
 175   1              else
 176   1              {
 177   2                      /* Continue on */
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 4   

 178   2              }
 179   1      }
 180          
 181          void UpdateButtonState(uint8 slot_1, uint8 slot_2)
 182          {
 183   1              LCD_Char_1_Position(ROW_0,COLUMN_0);
 184   1              
 185   1              /* Check the state of the buttons and update the LCD and the temperature setting */
 186   1              if (slot_1 && slot_2)
 187   1              {
 188   2                      //do nothing;
 189   2              }
 190   1              else if (slot_1 || slot_2)
 191   1              {
 192   2                      if (slot_1)
 193   2                      {
 194   3                              if(temp_set < 28)
 195   3                              {
 196   4                                      temp_set++;
 197   4                              }
 198   3                      }
 199   2                      if (slot_2)
 200   2                      {
 201   3                              if(temp_set > 18)
 202   3                              {
 203   4                                      temp_set--;
 204   4                              }
 205   3                      }
 206   2              }
 207   1              else
 208   1              {
 209   2                      //do nothing;
 210   2              }
 211   1              UpdateDisplay(temp_set, 1);
 212   1      }
 213          
 214          /* [] END OF FILE */
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0000 D2AF              SETB    EA
                                           ; SOURCE LINE # 61
0002 120000      E     LCALL   ADC_DelSig_1_Start
                                           ; SOURCE LINE # 62
0005 120000      E     LCALL   LCD_Char_1_Start
                                           ; SOURCE LINE # 65
0008 7D00              MOV     R5,#00H
000A 7F00              MOV     R7,#00H
000C 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 67
000F 7BFF              MOV     R3,#0FFH
0011 7A00        R     MOV     R2,#HIGH ?SC_0
0013 7900        R     MOV     R1,#LOW ?SC_0
0015 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 69
0018 7D00              MOV     R5,#00H
001A 7F01              MOV     R7,#01H
001C 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 70
001F 7BFF              MOV     R3,#0FFH
0021 7A00        R     MOV     R2,#HIGH ?SC_15
0023 7900        R     MOV     R1,#LOW ?SC_15
0025 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 72
0028 120000      E     LCALL   ADC_DelSig_1_StartConvert
                                           ; SOURCE LINE # 75
002B 120000      E     LCALL   CapSense_Start
                                           ; SOURCE LINE # 76
002E 120000      E     LCALL   CapSense_InitializeAllBaselines
                                           ; SOURCE LINE # 77
0031 120000      E     LCALL   CapSense_ScanEnabledWidgets
                                           ; SOURCE LINE # 81
0034 120000      E     LCALL   PWM_1_Start
                                           ; SOURCE LINE # 82
                                           ; SOURCE LINE # 83
0037         ?C0003:
                                           ; SOURCE LINE # 85
0037 120000      E     LCALL   CapSense_IsBusy
003A EF                MOV     A,R7
003B 70FA              JNZ     ?C0003
003D         ?C0004:
                                           ; SOURCE LINE # 88
003D 120000      E     LCALL   CapSense_UpdateEnabledBaselines
                                           ; SOURCE LINE # 89
0040 120000      E     LCALL   CapSense_ScanEnabledWidgets
                                           ; SOURCE LINE # 92
0043 7F00              MOV     R7,#00H
0045 120000      E     LCALL   _CapSense_CheckIsWidgetActive
0048 900000      R     MOV     DPTR,#stateB_1
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
004D 7F01              MOV     R7,#01H
004F 120000      E     LCALL   _CapSense_CheckIsWidgetActive
0052 900000      R     MOV     DPTR,#stateB_2
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 6   

0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
0057 7F00              MOV     R7,#00H
0059 120000      E     LCALL   _ADC_DelSig_1_IsEndConversion
                                           ; SOURCE LINE # 98
005C 120000      E     LCALL   ADC_DelSig_1_GetResult16
005F 900000      R     MOV     DPTR,#voltageRawCount
0062 EE                MOV     A,R6
0063 F0                MOVX    @DPTR,A
0064 A3                INC     DPTR
0065 EF                MOV     A,R7
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
0067 900000      R     MOV     DPTR,#voltageRawCount
006A E0                MOVX    A,@DPTR
006B FC                MOV     R4,A
006C A3                INC     DPTR
006D E0                MOVX    A,@DPTR
006E FD                MOV     R5,A
006F E4                CLR     A
0070 120000      E     LCALL   ?C?FCASTI
0073 7B14              MOV     R3,#014H
0075 7AAE              MOV     R2,#0AEH
0077 7977              MOV     R1,#077H
0079 7840              MOV     R0,#040H
007B 120000      E     LCALL   ?C?FPDIV
007E 7B17              MOV     R3,#017H
0080 7A48              MOV     R2,#048H
0082 79D0              MOV     R1,#0D0H
0084 783D              MOV     R0,#03DH
0086 120000      E     LCALL   ?C?FPMUL
0089 7B00              MOV     R3,#00H
008B 7A00              MOV     R2,#00H
008D 7900              MOV     R1,#00H
008F 783F              MOV     R0,#03FH
0091 120000      E     LCALL   ?C?FPADD
0094 120000      E     LCALL   ?C?CASTF
0097 900000      R     MOV     DPTR,#temp
009A EE                MOV     A,R6
009B F0                MOVX    @DPTR,A
009C A3                INC     DPTR
009D EF                MOV     A,R7
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
009F 900000      R     MOV     DPTR,#temp_set
00A2 E0                MOVX    A,@DPTR
00A3 FE                MOV     R6,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 900000      R     MOV     DPTR,#temp
00AA E0                MOVX    A,@DPTR
00AB FC                MOV     R4,A
00AC A3                INC     DPTR
00AD E0                MOVX    A,@DPTR
00AE FD                MOV     R5,A
00AF D3                SETB    C
00B0 ED                MOV     A,R5
00B1 9F                SUBB    A,R7
00B2 EC                MOV     A,R4
00B3 9E                SUBB    A,R6
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 7   

00B4 4019              JC      ?C0005
00B6 900000      R     MOV     DPTR,#temp_set
00B9 E0                MOVX    A,@DPTR
00BA FE                MOV     R6,A
00BB A3                INC     DPTR
00BC E0                MOVX    A,@DPTR
00BD FF                MOV     R7,A
00BE 900000      R     MOV     DPTR,#temp
00C1 E0                MOVX    A,@DPTR
00C2 FC                MOV     R4,A
00C3 A3                INC     DPTR
00C4 E0                MOVX    A,@DPTR
00C5 FD                MOV     R5,A
00C6 C3                CLR     C
00C7 ED                MOV     A,R5
00C8 9F                SUBB    A,R7
00C9 FF                MOV     R7,A
00CA EC                MOV     A,R4
00CB 9E                SUBB    A,R6
00CC FE                MOV     R6,A
00CD 8004              SJMP    ?C0006
00CF         ?C0005:
00CF 7E00              MOV     R6,#00H
00D1 7F00              MOV     R7,#00H
00D3         ?C0006:
00D3 7C00              MOV     R4,#00H
00D5 7D32              MOV     R5,#032H
00D7 120000      E     LCALL   ?C?IMUL
00DA C3                CLR     C
00DB 740F              MOV     A,#0FH
00DD 9F                SUBB    A,R7
00DE FF                MOV     R7,A
00DF 7427              MOV     A,#027H
00E1 9E                SUBB    A,R6
00E2 FE                MOV     R6,A
00E3 900000      R     MOV     DPTR,#cold
00E6 EE                MOV     A,R6
00E7 F0                MOVX    @DPTR,A
00E8 A3                INC     DPTR
00E9 EF                MOV     A,R7
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
00EB 900000      R     MOV     DPTR,#cold
00EE E0                MOVX    A,@DPTR
00EF FE                MOV     R6,A
00F0 A3                INC     DPTR
00F1 E0                MOVX    A,@DPTR
00F2 FF                MOV     R7,A
00F3 C3                CLR     C
00F4 EF                MOV     A,R7
00F5 94E8              SUBB    A,#0E8H
00F7 EE                MOV     A,R6
00F8 9403              SUBB    A,#03H
00FA 500A              JNC     ?C0007
                                           ; SOURCE LINE # 103
00FC 900000      R     MOV     DPTR,#cold
00FF 7403              MOV     A,#03H
0101 F0                MOVX    @DPTR,A
0102 A3                INC     DPTR
0103 74E8              MOV     A,#0E8H
0105 F0                MOVX    @DPTR,A
0106         ?C0007:
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 8   

                                           ; SOURCE LINE # 104
0106 900000      R     MOV     DPTR,#cold
0109 E0                MOVX    A,@DPTR
010A FE                MOV     R6,A
010B A3                INC     DPTR
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E D3                SETB    C
010F EF                MOV     A,R7
0110 940F              SUBB    A,#0FH
0112 EE                MOV     A,R6
0113 9427              SUBB    A,#027H
0115 400A              JC      ?C0008
                                           ; SOURCE LINE # 105
0117 900000      R     MOV     DPTR,#cold
011A 7427              MOV     A,#027H
011C F0                MOVX    @DPTR,A
011D A3                INC     DPTR
011E 740F              MOV     A,#0FH
0120 F0                MOVX    @DPTR,A
0121         ?C0008:
                                           ; SOURCE LINE # 107
0121 900000      R     MOV     DPTR,#cold
0124 E0                MOVX    A,@DPTR
0125 FE                MOV     R6,A
0126 A3                INC     DPTR
0127 E0                MOVX    A,@DPTR
0128 FF                MOV     R7,A
0129 120000      E     LCALL   _PWM_1_WriteCompare
                                           ; SOURCE LINE # 109
012C 900000      R     MOV     DPTR,#temp
012F E0                MOVX    A,@DPTR
0130 FE                MOV     R6,A
0131 A3                INC     DPTR
0132 E0                MOVX    A,@DPTR
0133 FF                MOV     R7,A
0134 D3                SETB    C
0135 EF                MOV     A,R7
0136 94FF              SUBB    A,#0FFH
0138 EE                MOV     A,R6
0139 947F              SUBB    A,#07FH
013B 4008              JC      ?C0010
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
013D 900000      R     MOV     DPTR,#temp
0140 E4                CLR     A
0141 F0                MOVX    @DPTR,A
0142 A3                INC     DPTR
0143 E4                CLR     A
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
0145         ?C0010:
                                           ; SOURCE LINE # 117
0145 900000      R     MOV     DPTR,#show
0148 E0                MOVX    A,@DPTR
0149 FE                MOV     R6,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D C3                CLR     C
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 9   

014E EF                MOV     A,R7
014F 940A              SUBB    A,#0AH
0151 EE                MOV     A,R6
0152 6480              XRL     A,#080H
0154 9480              SUBB    A,#080H
0156 500D              JNC     ?C0011
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
0158 900000      R     MOV     DPTR,#show
015B E4                CLR     A
015C 75F001            MOV     B,#01H
015F 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 120
0162 020000      R     LJMP    ?C0003
0165         ?C0011:
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
0165 900000      R     MOV     DPTR,#show
0168 E4                CLR     A
0169 F0                MOVX    @DPTR,A
016A A3                INC     DPTR
016B E4                CLR     A
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
016D 900000      R     MOV     DPTR,#temp
0170 E0                MOVX    A,@DPTR
0171 FE                MOV     R6,A
0172 A3                INC     DPTR
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 7D00              MOV     R5,#00H
0177 7C00              MOV     R4,#00H
0179 120000      R     LCALL   _UpdateDisplay
                                           ; SOURCE LINE # 125
017C 900000      R     MOV     DPTR,#stateB_1
017F E0                MOVX    A,@DPTR
0180 FF                MOV     R7,A
0181 900000      R     MOV     DPTR,#stateB_2
0184 E0                MOVX    A,@DPTR
0185 FD                MOV     R5,A
0186 120000      R     LCALL   _UpdateButtonState
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0189 020000      R     LJMP    ?C0003
018C 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _UpdateDisplay (BEGIN)
                                           ; SOURCE LINE # 145
0000 900000      R     MOV     DPTR,#voltageRawCount
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 900000      R     MOV     DPTR,#row
000B EC                MOV     A,R4
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E ED                MOV     A,R5
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 10  

                                           ; SOURCE LINE # 148
0010 7D00              MOV     R5,#00H
0012 7F00              MOV     R7,#00H
0014 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 150
0017 7BFF              MOV     R3,#0FFH
0019 7A00        R     MOV     R2,#HIGH ?SC_30
001B 7900        R     MOV     R1,#LOW ?SC_30
001D 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 152
0020 7D0D              MOV     R5,#0DH
0022 7F00              MOV     R7,#00H
0024 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 153
0027 7BFF              MOV     R3,#0FFH
0029 7A00        R     MOV     R2,#HIGH ?SC_40
002B 7900        R     MOV     R1,#LOW ?SC_40
002D 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 155
0030 7D00              MOV     R5,#00H
0032 7F01              MOV     R7,#01H
0034 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 156
0037 7BFF              MOV     R3,#0FFH
0039 7A00        R     MOV     R2,#HIGH ?SC_15
003B 7900        R     MOV     R1,#LOW ?SC_15
003D 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 159
0040 900000      R     MOV     DPTR,#row
0043 E0                MOVX    A,@DPTR
0044 FE                MOV     R6,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 7D0A              MOV     R5,#0AH
004A 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 161
004D 900000      R     MOV     DPTR,#voltageRawCount
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 120000      E     LCALL   _LCD_Char_1_PrintDecUint16
                                           ; SOURCE LINE # 163
0058 900000      R     MOV     DPTR,#voltageRawCount
005B E0                MOVX    A,@DPTR
005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 C3                CLR     C
0061 EF                MOV     A,R7
0062 940A              SUBB    A,#0AH
0064 EE                MOV     A,R6
0065 9400              SUBB    A,#00H
0067 5017              JNC     ?C0014
                                           ; SOURCE LINE # 164
                                           ; SOURCE LINE # 166
0069 900000      R     MOV     DPTR,#row
006C E0                MOVX    A,@DPTR
006D FE                MOV     R6,A
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 11  

006E A3                INC     DPTR
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 7D0B              MOV     R5,#0BH
0073 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 167
0076 7BFF              MOV     R3,#0FFH
0078 7A00        R     MOV     R2,#HIGH ?SC_42
007A 7900        R     MOV     R1,#LOW ?SC_42
007C 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 168
007F 22                RET     
0080         ?C0014:
                                           ; SOURCE LINE # 169
0080 900000      R     MOV     DPTR,#voltageRawCount
0083 E0                MOVX    A,@DPTR
0084 FE                MOV     R6,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 C3                CLR     C
0089 EF                MOV     A,R7
008A 9464              SUBB    A,#064H
008C EE                MOV     A,R6
008D 9400              SUBB    A,#00H
008F 5016              JNC     ?C0018
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 172
0091 900000      R     MOV     DPTR,#row
0094 E0                MOVX    A,@DPTR
0095 FE                MOV     R6,A
0096 A3                INC     DPTR
0097 E0                MOVX    A,@DPTR
0098 FF                MOV     R7,A
0099 7D0C              MOV     R5,#0CH
009B 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 173
009E 7BFF              MOV     R3,#0FFH
00A0 7A00        R     MOV     R2,#HIGH ?SC_42
00A2 7900        R     MOV     R1,#LOW ?SC_42
00A4 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
00A7         ?C0018:
00A7 22                RET     
             ; FUNCTION _UpdateDisplay (END)

             ; FUNCTION _UpdateButtonState (BEGIN)
                                           ; SOURCE LINE # 181
0000 900000      R     MOV     DPTR,#slot_1
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#slot_2
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
000A 7D00              MOV     R5,#00H
000C 7F00              MOV     R7,#00H
000E 120000      E     LCALL   _LCD_Char_1_Position
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 12  

                                           ; SOURCE LINE # 186
0011 900000      R     MOV     DPTR,#slot_1
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 6008              JZ      ?C0019
0019 900000      R     MOV     DPTR,#slot_2
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 7057              JNZ     ?C0020
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 189
0021         ?C0019:
                                           ; SOURCE LINE # 190
0021 900000      R     MOV     DPTR,#slot_1
0024 E0                MOVX    A,@DPTR
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 7008              JNZ     ?C0022
0029 900000      R     MOV     DPTR,#slot_2
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E EF                MOV     A,R7
002F 6047              JZ      ?C0020
0031         ?C0022:
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
0031 900000      R     MOV     DPTR,#slot_1
0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 EF                MOV     A,R7
0037 601B              JZ      ?C0023
                                           ; SOURCE LINE # 193
                                           ; SOURCE LINE # 194
0039 900000      R     MOV     DPTR,#temp_set
003C E0                MOVX    A,@DPTR
003D FE                MOV     R6,A
003E A3                INC     DPTR
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 C3                CLR     C
0042 EF                MOV     A,R7
0043 941C              SUBB    A,#01CH
0045 EE                MOV     A,R6
0046 9400              SUBB    A,#00H
0048 500A              JNC     ?C0023
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
004A 900000      R     MOV     DPTR,#temp_set
004D E4                CLR     A
004E 75F001            MOV     B,#01H
0051 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 197
                                           ; SOURCE LINE # 198
0054         ?C0023:
                                           ; SOURCE LINE # 199
0054 900000      R     MOV     DPTR,#slot_2
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 EF                MOV     A,R7
005A 601C              JZ      ?C0020
C51 COMPILER V9.03   MAIN                                                                  08/28/2015 11:10:16 PAGE 13  

                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
005C 900000      R     MOV     DPTR,#temp_set
005F E0                MOVX    A,@DPTR
0060 FE                MOV     R6,A
0061 A3                INC     DPTR
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 D3                SETB    C
0065 EF                MOV     A,R7
0066 9412              SUBB    A,#012H
0068 EE                MOV     A,R6
0069 9400              SUBB    A,#00H
006B 400B              JC      ?C0020
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
006D 900000      R     MOV     DPTR,#temp_set
0070 74FF              MOV     A,#0FFH
0072 75F0FF            MOV     B,#0FFH
0075 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 204
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 210
0078         ?C0020:
                                           ; SOURCE LINE # 211
0078 900000      R     MOV     DPTR,#temp_set
007B E0                MOVX    A,@DPTR
007C FE                MOV     R6,A
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F FF                MOV     R7,A
0080 7D01              MOV     R5,#01H
0082 7C00              MOV     R4,#00H
0084 120000      R     LCALL   _UpdateDisplay
                                           ; SOURCE LINE # 212
0087 22                RET     
             ; FUNCTION _UpdateButtonState (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    701    ----
   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =     12       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
