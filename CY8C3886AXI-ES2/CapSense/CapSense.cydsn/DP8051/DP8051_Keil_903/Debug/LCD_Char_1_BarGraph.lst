C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE LCD_CHAR_1_BARGRAPH
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\LCD_Char_1_BarGraph.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\LCD_Char_1_BarGraph.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\LCD_Char_1
                    -_BarGraph.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\LCD_Char_1_BarGrap
                    -h.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: LCD_Char_1_BarGraph.c
   3          * Version 1.50
   4          *
   5          * Description:
   6          *  This file provides the custom character data and API for creating and using
   7          *  bar graphs with the Character LCD component.
   8          *
   9          * Note:
  10          *
  11          ********************************************************************************
  12          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions,
  14          * disclaimers, and limitations in the end user license agreement accompanying
  15          * the software package with which this file was provided.
  16          *******************************************************************************/
  17          
  18          #include "LCD_Char_1.h"
  19          
  20          
  21          uint8 const CYCODE LCD_Char_1_customFonts[] = \
  22          {
  23              /* Character LCD_Char_1_CUSTOM_0   */
  24              0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u, \
  25              /* Character LCD_Char_1_CUSTOM_1   */
  26              0x10u,    0x10u,    0x10u,    0x10u,    0x10u,    0x10u,    0x10u,    0x10u, \
  27              /* Character LCD_Char_1_CUSTOM_2   */
  28              0x18u,    0x18u,    0x18u,    0x18u,    0x18u,    0x18u,    0x18u,    0x18u, \
  29              /* Character LCD_Char_1_CUSTOM_3   */
  30              0x1Cu,    0x1Cu,    0x1Cu,    0x1Cu,    0x1Cu,    0x1Cu,    0x1Cu,    0x1Cu, \
  31              /* Character LCD_Char_1_CUSTOM_4   */
  32              0x1Eu,    0x1Eu,    0x1Eu,    0x1Eu,    0x1Eu,    0x1Eu,    0x1Eu,    0x1Eu, \
  33              /* Character LCD_Char_1_CUSTOM_5   */
  34              0x1Fu,    0x1Fu,    0x1Fu,    0x1Fu,    0x1Fu,    0x1Fu,    0x1Fu,    0x1Fu, \
  35              /* Character LCD_Char_1_CUSTOM_6   */
  36              0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u, \
  37              /* Character LCD_Char_1_CUSTOM_7   */
  38              0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u,    0x00u \
  39          };
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: LCD_Char_1_LoadCustomFonts
  44          ********************************************************************************
  45          *
  46          * Summary:
  47          *  Loads 8 custom font characters into the LCD Module for use.  Cannot use
  48          *  characters from two different font sets at once, but font sets can be
  49          *  switched out during runtime.
  50          *
  51          * Parameters:
  52          *  customData:  pointer to a constant array of 64 bytes representing 8 custom
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 2   

  53          *               font characters.
  54          * Return:
  55          *  None.
  56          *
  57          * Theory:
  58          *  Prior to using this function user need to import the pointer to custom
  59          *  font array to your project by writting the following in the source code file 
  60          *  where custom font will be used: 
  61          *       extern uint8 const CYCODE LCD_Char_customFonts[];
  62          *  This function is not automatically called by the Start() routine and must be
  63          *  called manually by the user. 
  64          *******************************************************************************/
  65          void LCD_Char_1_LoadCustomFonts(const uint8* customData) 
  66          {
  67   1          uint8 indexU8;
  68   1      
  69   1          LCD_Char_1_IsReady();
  70   1          /* Set starting address in the LCD Module */
  71   1          /* Optionally: Read the current address to restore at a later time */
  72   1          LCD_Char_1_WriteControl(LCD_Char_1_CGRAM_0);
  73   1      
  74   1          /* Load in the 64 bytes of CustomChar Data */
  75   1          for(indexU8 = 0u; indexU8 < LCD_Char_1_CUSTOM_CHAR_SET_LEN; indexU8++)
  76   1          {
  77   2              /* Delay between each write */
  78   2              LCD_Char_1_WriteData(customData[indexU8]);
  79   2          }
  80   1      
  81   1          LCD_Char_1_IsReady();
  82   1          LCD_Char_1_WriteControl(LCD_Char_1_DDRAM_0);
  83   1      }
  84          
  85          
  86          /*******************************************************************************
  87          * Function Name: LCD_Char_1_DrawHorizontalBG
  88          ********************************************************************************
  89          *
  90          * Summary:
  91          *  Draws the horizontal bargraph.
  92          *
  93          * Parameters:
  94          *  row:            The row in which the bar graph starts.
  95          *  column:         The column in which the bar graph starts.
  96          *  maxCharacters:  The max length of the graph in whole characters.
  97          *  value:          The current length or height of the graph in pixels.
  98          *
  99          * Return:
 100          *  void.
 101          *
 102          *******************************************************************************/
 103          void LCD_Char_1_DrawHorizontalBG(uint8 row, uint8 column, uint8 maxCharacters, uint8 value) \
 104                                                                  
 105          {
 106   1          /* 8-bit Counter */
 107   1          uint8 count8 = 0u;
 108   1          uint8 fullChars;
 109   1          uint8 remainingPixels;
 110   1      
 111   1          /* Number of full characters to draw */
 112   1          fullChars = value / LCD_Char_1_CHARACTER_WIDTH;
 113   1         
 114   1          /* Number of remaining pixels to draw */
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 3   

 115   1          remainingPixels = value % LCD_Char_1_CHARACTER_WIDTH; 
 116   1          
 117   1          /* Ensure that the maximum character limit is followed. */
 118   1          if(fullChars >= maxCharacters)
 119   1          {
 120   2              fullChars = maxCharacters;
 121   2          }
 122   1          
 123   1          /* Put Cursor at start position */
 124   1          LCD_Char_1_Position(row, column);
 125   1      
 126   1          /* Write full characters */
 127   1          for(count8 = 0u; count8 < fullChars; count8++)
 128   1          {
 129   2              LCD_Char_1_WriteData(LCD_Char_1_CUSTOM_5);
 130   2          }
 131   1      
 132   1          if(fullChars < maxCharacters)
 133   1          {
 134   2              /* Write remaining pixels */
 135   2              LCD_Char_1_WriteData(remainingPixels);
 136   2      
 137   2              if(fullChars < (maxCharacters - 1u))
 138   2              {
 139   3                  /* Fill with whitespace to end of bar graph */
 140   3                  for(count8 = 0u; count8 < (maxCharacters - fullChars - 1u); count8++)
 141   3                  {
 142   4                      LCD_Char_1_WriteData(LCD_Char_1_CUSTOM_0);
 143   4                  }
 144   3              }
 145   2          }
 146   1      }
 147          
 148          
 149          /*******************************************************************************
 150          *  Function Name: LCD_Char_1_DrawVerticalBG
 151          ********************************************************************************
 152          *
 153          * Summary:
 154          *  Draws the vertical bargraph.
 155          *
 156          * Parameters:
 157          *  row:            The row in which the bar graph starts.
 158          *  column:         The column in which the bar graph starts.
 159          *  maxCharacters:  The max height of the graph in whole characters.
 160          *  value:          The current length or height of the graph in pixels.
 161          *
 162          * Return:
 163          *  void.
 164          *
 165          *******************************************************************************/
 166          void LCD_Char_1_DrawVerticalBG(uint8 row, uint8 column, uint8 maxCharacters, uint8 value) \
 167                                                                  
 168          {
 169   1          /* 8-bit Counter */
 170   1          uint8 count8 = 0u;
 171   1          /* Current Row Tracker */
 172   1          int8 currentRow;
 173   1          uint8 fullChars;
 174   1          uint8 remainingPixels;
 175   1      
 176   1          /* Row number error.  Don't write remaining pixels.*/
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 4   

 177   1          currentRow = row;
 178   1      
 179   1          /* Number of full characters to draw */
 180   1          fullChars = value / LCD_Char_1_CHARACTER_HEIGHT;
 181   1          
 182   1          /* Number of remaining pixels to draw */
 183   1          remainingPixels = value % LCD_Char_1_CHARACTER_HEIGHT;
 184   1      
 185   1          /* Put Cursor at start position */
 186   1          LCD_Char_1_Position(row, column);
 187   1      
 188   1          /* Make sure the bar graph fits inside the space allotted */
 189   1          if(fullChars >= maxCharacters)
 190   1          {
 191   2              fullChars = maxCharacters;
 192   2          }
 193   1      
 194   1          /*  Write full characters */
 195   1          while(count8 < fullChars)
 196   1          {
 197   2              LCD_Char_1_WriteData(LCD_Char_1_CUSTOM_7);
 198   2              
 199   2              count8++;
 200   2             
 201   2              /* Each pass through, move one row higher */
 202   2              if((row - count8) >= 0u)
 203   2              {
 204   3                  LCD_Char_1_Position(row - count8, column);
 205   3              }
 206   2              else
 207   2              {
 208   3                  break;
 209   3              }    
 210   2          }
 211   1      
 212   1          if(((row - count8) >= 0u) && (fullChars < maxCharacters))
 213   1          {
 214   2              /* Write remaining pixels */
 215   2              if(remainingPixels == 0u)
 216   2              {
 217   3                  LCD_Char_1_WriteData(' ');
 218   3              }
 219   2              else
 220   2              {
 221   3                  LCD_Char_1_WriteData(remainingPixels - 1u);
 222   3              }
 223   2      
 224   2              currentRow = row - count8 - 1u;
 225   2      
 226   2              if(currentRow >= 0u)
 227   2              {
 228   3                  /* Move up one row and fill with whitespace till top of bar graph */
 229   3                  for(count8 = 0u; count8 < (maxCharacters - fullChars - 1u); count8++)
 230   3                  {
 231   4                      LCD_Char_1_Position(currentRow, column);
 232   4                      LCD_Char_1_WriteData(' ');
 233   4                      currentRow --;
 234   4                  }
 235   3              }
 236   2          }
 237   1      }
 238          
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 5   

 239          
 240          /* [] END OF FILE */
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _LCD_Char_1_LoadCustomFonts (BEGIN)
                                           ; SOURCE LINE # 65
0000 900000      R     MOV     DPTR,#customData
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 69
0006 120000      E     LCALL   LCD_Char_1_IsReady
                                           ; SOURCE LINE # 72
0009 7F40              MOV     R7,#040H
000B 120000      E     LCALL   _LCD_Char_1_WriteControl
                                           ; SOURCE LINE # 75
000E 900000      R     MOV     DPTR,#indexU8
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
0013         ?C0001:
0013 900000      R     MOV     DPTR,#indexU8
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 C3                CLR     C
001A 9440              SUBB    A,#040H
001C 5020              JNC     ?C0002
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 78
001E 900000      R     MOV     DPTR,#customData
0021 120000      E     LCALL   ?C?PLDXDATA
0024 900000      R     MOV     DPTR,#indexU8
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 E9                MOV     A,R1
002A 2F                ADD     A,R7
002B F9                MOV     R1,A
002C E4                CLR     A
002D 3A                ADDC    A,R2
002E FA                MOV     R2,A
002F 120000      E     LCALL   ?C?CLDPTR
0032 FF                MOV     R7,A
0033 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 79
0036 900000      R     MOV     DPTR,#indexU8
0039 E0                MOVX    A,@DPTR
003A 04                INC     A
003B F0                MOVX    @DPTR,A
003C 80D5              SJMP    ?C0001
003E         ?C0002:
                                           ; SOURCE LINE # 81
003E 120000      E     LCALL   LCD_Char_1_IsReady
                                           ; SOURCE LINE # 82
0041 7F80              MOV     R7,#080H
0043 120000      E     LCALL   _LCD_Char_1_WriteControl
                                           ; SOURCE LINE # 83
0046 22                RET     
             ; FUNCTION _LCD_Char_1_LoadCustomFonts (END)

             ; FUNCTION _LCD_Char_1_DrawHorizontalBG (BEGIN)
                                           ; SOURCE LINE # 103
0000 900000      R     MOV     DPTR,#row
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 7   

0005 900000      R     MOV     DPTR,#column
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
000A 900000      R     MOV     DPTR,#maxCharacters
000D EB                MOV     A,R3
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 107
000F 900000      R     MOV     DPTR,#count8
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
0014 900000      R     MOV     DPTR,#value
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 7E00              MOV     R6,#00H
001B 7C00              MOV     R4,#00H
001D 7D05              MOV     R5,#05H
001F 120000      E     LCALL   ?C?UIDIV
0022 900000      R     MOV     DPTR,#fullChars
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0027 900000      R     MOV     DPTR,#value
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 7E00              MOV     R6,#00H
002E 7C00              MOV     R4,#00H
0030 7D05              MOV     R5,#05H
0032 120000      E     LCALL   ?C?UIDIV
0035 AF05              MOV     R7,AR5
0037 900000      R     MOV     DPTR,#remainingPixels
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
003C 900000      R     MOV     DPTR,#maxCharacters
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#fullChars
0044 E0                MOVX    A,@DPTR
0045 FE                MOV     R6,A
0046 EE                MOV     A,R6
0047 C3                CLR     C
0048 9F                SUBB    A,R7
0049 400A              JC      ?C0005
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
004B 900000      R     MOV     DPTR,#maxCharacters
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 900000      R     MOV     DPTR,#fullChars
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 121
0055         ?C0005:
                                           ; SOURCE LINE # 124
0055 900000      R     MOV     DPTR,#row
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A 900000      R     MOV     DPTR,#column
005D E0                MOVX    A,@DPTR
005E FD                MOV     R5,A
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 8   

005F 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 127
0062 900000      R     MOV     DPTR,#count8
0065 E4                CLR     A
0066 F0                MOVX    @DPTR,A
0067         ?C0006:
0067 900000      R     MOV     DPTR,#fullChars
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C 900000      R     MOV     DPTR,#count8
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 EE                MOV     A,R6
0072 C3                CLR     C
0073 9F                SUBB    A,R7
0074 500D              JNC     ?C0007
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
0076 7F05              MOV     R7,#05H
0078 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 130
007B 900000      R     MOV     DPTR,#count8
007E E0                MOVX    A,@DPTR
007F 04                INC     A
0080 F0                MOVX    @DPTR,A
0081 80E4              SJMP    ?C0006
0083         ?C0007:
                                           ; SOURCE LINE # 132
0083 900000      R     MOV     DPTR,#maxCharacters
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 900000      R     MOV     DPTR,#fullChars
008B E0                MOVX    A,@DPTR
008C FE                MOV     R6,A
008D EE                MOV     A,R6
008E C3                CLR     C
008F 9F                SUBB    A,R7
0090 505D              JNC     ?C0014
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 135
0092 900000      R     MOV     DPTR,#remainingPixels
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 137
009A 900000      R     MOV     DPTR,#maxCharacters
009D E0                MOVX    A,@DPTR
009E FF                MOV     R7,A
009F 7E00              MOV     R6,#00H
00A1 EF                MOV     A,R7
00A2 24FF              ADD     A,#0FFH
00A4 FF                MOV     R7,A
00A5 EE                MOV     A,R6
00A6 34FF              ADDC    A,#0FFH
00A8 FE                MOV     R6,A
00A9 900000      R     MOV     DPTR,#fullChars
00AC E0                MOVX    A,@DPTR
00AD FD                MOV     R5,A
00AE 7C00              MOV     R4,#00H
00B0 C3                CLR     C
00B1 ED                MOV     A,R5
00B2 9F                SUBB    A,R7
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 9   

00B3 EC                MOV     A,R4
00B4 9E                SUBB    A,R6
00B5 5038              JNC     ?C0014
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 140
00B7 900000      R     MOV     DPTR,#count8
00BA E4                CLR     A
00BB F0                MOVX    @DPTR,A
00BC         ?C0011:
00BC 900000      R     MOV     DPTR,#fullChars
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 900000      R     MOV     DPTR,#maxCharacters
00C4 E0                MOVX    A,@DPTR
00C5 FE                MOV     R6,A
00C6 C3                CLR     C
00C7 EE                MOV     A,R6
00C8 9F                SUBB    A,R7
00C9 FF                MOV     R7,A
00CA 7E00              MOV     R6,#00H
00CC EF                MOV     A,R7
00CD 24FF              ADD     A,#0FFH
00CF FF                MOV     R7,A
00D0 EE                MOV     A,R6
00D1 34FF              ADDC    A,#0FFH
00D3 FE                MOV     R6,A
00D4 900000      R     MOV     DPTR,#count8
00D7 E0                MOVX    A,@DPTR
00D8 FD                MOV     R5,A
00D9 7C00              MOV     R4,#00H
00DB C3                CLR     C
00DC ED                MOV     A,R5
00DD 9F                SUBB    A,R7
00DE EC                MOV     A,R4
00DF 9E                SUBB    A,R6
00E0 500D              JNC     ?C0014
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
00E2 7F00              MOV     R7,#00H
00E4 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 143
00E7 900000      R     MOV     DPTR,#count8
00EA E0                MOVX    A,@DPTR
00EB 04                INC     A
00EC F0                MOVX    @DPTR,A
00ED 80CD              SJMP    ?C0011
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
00EF         ?C0014:
00EF 22                RET     
             ; FUNCTION _LCD_Char_1_DrawHorizontalBG (END)

             ; FUNCTION _LCD_Char_1_DrawVerticalBG (BEGIN)
                                           ; SOURCE LINE # 166
0000 900000      R     MOV     DPTR,#row
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#column
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
000A 900000      R     MOV     DPTR,#maxCharacters
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 10  

000D EB                MOV     A,R3
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 170
000F 900000      R     MOV     DPTR,#count8
0012 E4                CLR     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
0014 900000      R     MOV     DPTR,#row
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      R     MOV     DPTR,#currentRow
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
001E 900000      R     MOV     DPTR,#value
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 7E00              MOV     R6,#00H
0025 EF                MOV     A,R7
0026 7803              MOV     R0,#03H
0028         ?C0028:
0028 CE                XCH     A,R6
0029 C3                CLR     C
002A 13                RRC     A
002B CE                XCH     A,R6
002C 13                RRC     A
002D D8F9              DJNZ    R0,?C0028
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#fullChars
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 183
0035 900000      R     MOV     DPTR,#value
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 7E00              MOV     R6,#00H
003C 7E00              MOV     R6,#00H
003E EF                MOV     A,R7
003F 5407              ANL     A,#07H
0041 FF                MOV     R7,A
0042 900000      R     MOV     DPTR,#remainingPixels
0045 EF                MOV     A,R7
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0047 900000      R     MOV     DPTR,#row
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C 900000      R     MOV     DPTR,#column
004F E0                MOVX    A,@DPTR
0050 FD                MOV     R5,A
0051 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 189
0054 900000      R     MOV     DPTR,#maxCharacters
0057 E0                MOVX    A,@DPTR
0058 FF                MOV     R7,A
0059 900000      R     MOV     DPTR,#fullChars
005C E0                MOVX    A,@DPTR
005D FE                MOV     R6,A
005E EE                MOV     A,R6
005F C3                CLR     C
0060 9F                SUBB    A,R7
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 11  

0061 400A              JC      ?C0016
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
0063 900000      R     MOV     DPTR,#maxCharacters
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 900000      R     MOV     DPTR,#fullChars
006B EF                MOV     A,R7
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
006D         ?C0016:
                                           ; SOURCE LINE # 195
006D 900000      R     MOV     DPTR,#fullChars
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 900000      R     MOV     DPTR,#count8
0075 E0                MOVX    A,@DPTR
0076 FE                MOV     R6,A
0077 EE                MOV     A,R6
0078 C3                CLR     C
0079 9F                SUBB    A,R7
007A 5039              JNC     ?C0017
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
007C 7F07              MOV     R7,#07H
007E 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 199
0081 900000      R     MOV     DPTR,#count8
0084 E0                MOVX    A,@DPTR
0085 04                INC     A
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0087 900000      R     MOV     DPTR,#count8
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C 900000      R     MOV     DPTR,#row
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 C3                CLR     C
0092 EE                MOV     A,R6
0093 9F                SUBB    A,R7
0094 FF                MOV     R7,A
0095 EF                MOV     A,R7
0096 C3                CLR     C
0097 9400              SUBB    A,#00H
0099 401A              JC      ?C0017
                                           ; SOURCE LINE # 203
                                           ; SOURCE LINE # 204
009B 900000      R     MOV     DPTR,#count8
009E E0                MOVX    A,@DPTR
009F FF                MOV     R7,A
00A0 900000      R     MOV     DPTR,#row
00A3 E0                MOVX    A,@DPTR
00A4 FE                MOV     R6,A
00A5 C3                CLR     C
00A6 EE                MOV     A,R6
00A7 9F                SUBB    A,R7
00A8 FF                MOV     R7,A
00A9 900000      R     MOV     DPTR,#column
00AC E0                MOVX    A,@DPTR
00AD FD                MOV     R5,A
00AE 120000      E     LCALL   _LCD_Char_1_Position
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 12  

                                           ; SOURCE LINE # 205
00B1 80BA              SJMP    ?C0016
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 210
00B3 80B8              SJMP    ?C0016
00B5         ?C0017:
                                           ; SOURCE LINE # 212
00B5 900000      R     MOV     DPTR,#count8
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA 900000      R     MOV     DPTR,#row
00BD E0                MOVX    A,@DPTR
00BE FE                MOV     R6,A
00BF C3                CLR     C
00C0 EE                MOV     A,R6
00C1 9F                SUBB    A,R7
00C2 FF                MOV     R7,A
00C3 EF                MOV     A,R7
00C4 C3                CLR     C
00C5 9400              SUBB    A,#00H
00C7 5003              JNC     $ + 5H
00C9 020000      R     LJMP    ?C0027
00CC 900000      R     MOV     DPTR,#maxCharacters
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 900000      R     MOV     DPTR,#fullChars
00D4 E0                MOVX    A,@DPTR
00D5 FE                MOV     R6,A
00D6 EE                MOV     A,R6
00D7 C3                CLR     C
00D8 9F                SUBB    A,R7
00D9 4003              JC      $ + 5H
00DB 020000      R     LJMP    ?C0027
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 215
00DE 900000      R     MOV     DPTR,#remainingPixels
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
00E3 EF                MOV     A,R7
00E4 7007              JNZ     ?C0021
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
00E6 7F20              MOV     R7,#020H
00E8 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 218
00EB 800B              SJMP    ?C0022
00ED         ?C0021:
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
00ED 900000      R     MOV     DPTR,#remainingPixels
00F0 E0                MOVX    A,@DPTR
00F1 FF                MOV     R7,A
00F2 EF                MOV     A,R7
00F3 14                DEC     A
00F4 FF                MOV     R7,A
00F5 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 222
00F8         ?C0022:
                                           ; SOURCE LINE # 224
00F8 900000      R     MOV     DPTR,#count8
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 13  

00FB E0                MOVX    A,@DPTR
00FC FF                MOV     R7,A
00FD 900000      R     MOV     DPTR,#row
0100 E0                MOVX    A,@DPTR
0101 FE                MOV     R6,A
0102 C3                CLR     C
0103 EE                MOV     A,R6
0104 9F                SUBB    A,R7
0105 FF                MOV     R7,A
0106 EF                MOV     A,R7
0107 14                DEC     A
0108 FF                MOV     R7,A
0109 900000      R     MOV     DPTR,#currentRow
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
010E 900000      R     MOV     DPTR,#currentRow
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 C3                CLR     C
0114 EF                MOV     A,R7
0115 6480              XRL     A,#080H
0117 9480              SUBB    A,#080H
0119 404B              JC      ?C0027
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 229
011B 900000      R     MOV     DPTR,#count8
011E E4                CLR     A
011F F0                MOVX    @DPTR,A
0120         ?C0024:
0120 900000      R     MOV     DPTR,#fullChars
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 900000      R     MOV     DPTR,#maxCharacters
0128 E0                MOVX    A,@DPTR
0129 FE                MOV     R6,A
012A C3                CLR     C
012B EE                MOV     A,R6
012C 9F                SUBB    A,R7
012D FF                MOV     R7,A
012E 7E00              MOV     R6,#00H
0130 EF                MOV     A,R7
0131 24FF              ADD     A,#0FFH
0133 FF                MOV     R7,A
0134 EE                MOV     A,R6
0135 34FF              ADDC    A,#0FFH
0137 FE                MOV     R6,A
0138 900000      R     MOV     DPTR,#count8
013B E0                MOVX    A,@DPTR
013C FD                MOV     R5,A
013D 7C00              MOV     R4,#00H
013F C3                CLR     C
0140 ED                MOV     A,R5
0141 9F                SUBB    A,R7
0142 EC                MOV     A,R4
0143 9E                SUBB    A,R6
0144 5020              JNC     ?C0027
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0146 900000      R     MOV     DPTR,#currentRow
0149 E0                MOVX    A,@DPTR
014A FF                MOV     R7,A
C51 COMPILER V9.03   LCD_CHAR_1_BARGRAPH                                                   08/27/2015 14:50:41 PAGE 14  

014B 900000      R     MOV     DPTR,#column
014E E0                MOVX    A,@DPTR
014F FD                MOV     R5,A
0150 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 232
0153 7F20              MOV     R7,#020H
0155 120000      E     LCALL   _LCD_Char_1_WriteData
                                           ; SOURCE LINE # 233
0158 900000      R     MOV     DPTR,#currentRow
015B E0                MOVX    A,@DPTR
015C 14                DEC     A
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
015E 900000      R     MOV     DPTR,#count8
0161 E0                MOVX    A,@DPTR
0162 04                INC     A
0163 F0                MOVX    @DPTR,A
0164 80BA              SJMP    ?C0024
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
0166         ?C0027:
0166 22                RET     
             ; FUNCTION _LCD_Char_1_DrawVerticalBG (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
