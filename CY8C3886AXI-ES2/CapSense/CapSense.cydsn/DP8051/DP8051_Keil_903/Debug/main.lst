C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\main.lst) CD DB NOIP OT(2,SIZE) INCDIR(Generated
                    -_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <device.h>
  13          
  14          /* LCD specific */
  15          #define ROW_0 0 /* LCD row 0 */
  16          #define ROW_1 1 /* LCD row 1 */
  17          #define COLUMN_0 0 /* LCD column 0 */
  18          #define NUM_CHARACTERS 16 /* Number of characters on LCD */
  19          /* For clearing a row of the LCD*/
  20          #define CLEAR_ROW_STR " "
  21          /* Button 1 only string for row 0 of the LCD */
  22          #define BUTTON_1_STR "Button1 "
  23          /* Button 2 only string for row 0 of the LCD */
  24          #define BUTTON_2_STR " Button2"
  25          /* Button 1 and 2 string for row 0 of the LCD */
  26          #define BUTTON_1_2_STR "Button1 Button2"
  27          /* Default string for button row of the LCD */
  28          #define DEFAULT_ROW_0_STR "Touch Buttons "
  29          /* Default string for slider row of the LCD */
  30          #define DEFAULT_ROW_1_STR "Touch The Slider"
  31          
  32          /* LED specific */
  33          #define LED_ON 1 /* For setting LED pin high */
  34          #define LED_OFF 0 /* For setting LED pin low */
  35          
  36          /* CapSense specific */
  37          #define SLIDER_RESOLUTION 80
  38          //extern const uint8 LCD_Char_1_customFonts[];
  39          void UpdateButtonState(uint8 slot_1, uint8 slot_2);
  40          void UpdateSliderPosition(uint8 value);
  41          
  42          void main()
  43          {
  44   1              uint8 pos; /* Slider Position */
  45   1              uint8 stateB_1; /* Button1 State */
  46   1              uint8 stateB_2; /* Button2 State */
  47   1              
  48   1              /* Enable global interrupts */
  49   1              CYGlobalIntEnable; 
  50   1              
  51   1              /* LCD Initialization */
  52   1              LCD_Char_1_Start();
  53   1              
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 2   

  54   1              /* For Bargraph display on LCD */
  55   1              // LCD_Char_1_LoadCustomFonts(LCD_Char_1_customFonts);
  56   1              /* Start capsense and initialize baselines and enable scan */
  57   1              CapSense_Start();
  58   1              CapSense_InitializeAllBaselines();
  59   1              CapSense_ScanEnabledWidgets();
  60   1              
  61   1              while(1)
  62   1              {
  63   2                      /* If scanning is completed update the baseline count and check if sensor is active */
  64   2                      while(CapSense_IsBusy());
  65   2                      
  66   2                      /* Update baseline for all the sensors */
  67   2                      CapSense_UpdateEnabledBaselines();
  68   2                      CapSense_ScanEnabledWidgets();
  69   2                      
  70   2                      PWM_1_Start();
  71   2                      
  72   2                      /* Test if button widget is active */
  73   2                      stateB_1 = CapSense_CheckIsWidgetActive(CapSense_BUTTON0__BTN);
  74   2                      stateB_2 = CapSense_CheckIsWidgetActive(CapSense_BUTTON1__BTN);
  75   2                      pos =(uint8)CapSense_GetCentroidPos(CapSense_LINEARSLIDER0__LS);
  76   2                      
  77   2                      /* Update LCD and LED's with current Button and Linear Slider states */
  78   2                      UpdateButtonState(stateB_1, stateB_2);
  79   2                      UpdateSliderPosition(pos);
  80   2                      //PWM_1_WriteCount(0);
  81   2                      PWM_1_WriteCompare(80-pos);
  82   2              }
  83   1      }
  84          void UpdateButtonState(uint8 slot_1, uint8 slot_2)
  85          {
  86   1              LCD_Char_1_Position(ROW_0,COLUMN_0);
  87   1              /* Check the state of the buttons and update the LCD and LEDs */
  88   1              if (slot_1 && slot_2)
  89   1              {
  90   2                      /* Display both Button strings on LCD if both button slots are active */
  91   2                      LCD_Char_1_PrintString(BUTTON_1_2_STR);
  92   2                      /* Both LED's are on in this state */
  93   2                      LED_1_Write(LED_ON);
  94   2                      //LED_2_Write(LED_ON);
  95   2              }
  96   1              else if (slot_1 || slot_2)
  97   1              {
  98   2                      if (slot_1)
  99   2                      {
 100   3                              /* Display Button 1 state on LCD and LED1 */
 101   3                              LCD_Char_1_PrintString(BUTTON_1_STR);
 102   3                              LED_1_Write(LED_ON);
 103   3                              /* Button 2 is not active */
 104   3                              //LED_2_Write(LED_OFF);
 105   3                      }
 106   2                      if (slot_2)
 107   2                      {
 108   3                              /* Display Button 2 state on LCD and LED2 */
 109   3                              LCD_Char_1_PrintString(BUTTON_2_STR);
 110   3                              //LED_2_Write(LED_ON);
 111   3                              /* Button 1 is not active */
 112   3                              LED_1_Write(LED_OFF);
 113   3                      }
 114   2              }
 115   1                      else
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 3   

 116   1                      {
 117   2                              /* Display default string on LCD and set LED's to off */
 118   2                              LCD_Char_1_PrintString(DEFAULT_ROW_0_STR);
 119   2                              /* Set both LED's off in this state */
 120   2                              LED_1_Write(LED_OFF);
 121   2                              //LED_2_Write(LED_OFF);
 122   2                      }
 123   1      }
 124          void UpdateSliderPosition(uint8 value)
 125          {
 126   1              /* The slider position is 0xFF if there is no finger present on the slider */
 127   1              if (value > SLIDER_RESOLUTION)
 128   1              {
 129   2                      /* Clear old slider position (2nd row of LCD) */
 130   2                      LCD_Char_1_Position(ROW_1, COLUMN_0);
 131   2                      LCD_Char_1_PrintString(DEFAULT_ROW_1_STR);
 132   2              }
 133   1              else
 134   1              {
 135   2                      /* Update the bargraph with the current finger position */
 136   2                      LCD_Char_1_DrawHorizontalBG(ROW_1, COLUMN_0, NUM_CHARACTERS, value +1);
 137   2              }
 138   1      }
 139          /* [] END OF FILE */
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 49
0000 D2AF              SETB    EA
                                           ; SOURCE LINE # 52
0002 120000      E     LCALL   LCD_Char_1_Start
                                           ; SOURCE LINE # 57
0005 120000      E     LCALL   CapSense_Start
                                           ; SOURCE LINE # 58
0008 120000      E     LCALL   CapSense_InitializeAllBaselines
                                           ; SOURCE LINE # 59
000B 120000      E     LCALL   CapSense_ScanEnabledWidgets
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
000E         ?C0003:
                                           ; SOURCE LINE # 64
000E 120000      E     LCALL   CapSense_IsBusy
0011 EF                MOV     A,R7
0012 70FA              JNZ     ?C0003
0014         ?C0004:
                                           ; SOURCE LINE # 67
0014 120000      E     LCALL   CapSense_UpdateEnabledBaselines
                                           ; SOURCE LINE # 68
0017 120000      E     LCALL   CapSense_ScanEnabledWidgets
                                           ; SOURCE LINE # 70
001A 120000      E     LCALL   PWM_1_Start
                                           ; SOURCE LINE # 73
001D 7F01              MOV     R7,#01H
001F 120000      E     LCALL   _CapSense_CheckIsWidgetActive
0022 900000      R     MOV     DPTR,#stateB_1
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
0027 7F02              MOV     R7,#02H
0029 120000      E     LCALL   _CapSense_CheckIsWidgetActive
002C 900000      R     MOV     DPTR,#stateB_2
002F EF                MOV     A,R7
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
0031 7F00              MOV     R7,#00H
0033 120000      E     LCALL   _CapSense_GetCentroidPos
0036 900000      R     MOV     DPTR,#pos
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
003B 900000      R     MOV     DPTR,#stateB_1
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 900000      R     MOV     DPTR,#stateB_2
0043 E0                MOVX    A,@DPTR
0044 FD                MOV     R5,A
0045 120000      R     LCALL   _UpdateButtonState
                                           ; SOURCE LINE # 79
0048 900000      R     MOV     DPTR,#pos
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D 120000      R     LCALL   _UpdateSliderPosition
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 5   

                                           ; SOURCE LINE # 81
0050 900000      R     MOV     DPTR,#pos
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 C3                CLR     C
0056 7450              MOV     A,#050H
0058 9F                SUBB    A,R7
0059 FF                MOV     R7,A
005A 7E00              MOV     R6,#00H
005C 120000      E     LCALL   _PWM_1_WriteCompare
                                           ; SOURCE LINE # 82
005F 80AD              SJMP    ?C0003
0061 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _UpdateButtonState (BEGIN)
                                           ; SOURCE LINE # 84
0000 900000      R     MOV     DPTR,#slot_1
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#slot_2
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
000A 7D00              MOV     R5,#00H
000C 7F00              MOV     R7,#00H
000E 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 88
0011 900000      R     MOV     DPTR,#slot_1
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 6017              JZ      ?C0006
0019 900000      R     MOV     DPTR,#slot_2
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 600F              JZ      ?C0006
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 91
0021 7BFF              MOV     R3,#0FFH
0023 7A00        R     MOV     R2,#HIGH ?SC_0
0025 7900        R     MOV     R1,#LOW ?SC_0
0027 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 93
002A 7F01              MOV     R7,#01H
002C 120000      E     LCALL   _LED_1_Write
                                           ; SOURCE LINE # 95
002F 22                RET     
0030         ?C0006:
                                           ; SOURCE LINE # 96
0030 900000      R     MOV     DPTR,#slot_1
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 7008              JNZ     ?C0009
0038 900000      R     MOV     DPTR,#slot_2
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
003D EF                MOV     A,R7
003E 602D              JZ      ?C0008
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 6   

0040         ?C0009:
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
0040 900000      R     MOV     DPTR,#slot_1
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 EF                MOV     A,R7
0046 600E              JZ      ?C0010
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 101
0048 7BFF              MOV     R3,#0FFH
004A 7A00        R     MOV     R2,#HIGH ?SC_16
004C 7900        R     MOV     R1,#LOW ?SC_16
004E 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 102
0051 7F01              MOV     R7,#01H
0053 120000      E     LCALL   _LED_1_Write
                                           ; SOURCE LINE # 105
0056         ?C0010:
                                           ; SOURCE LINE # 106
0056 900000      R     MOV     DPTR,#slot_2
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B EF                MOV     A,R7
005C 601D              JZ      ?C0013
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 109
005E 7BFF              MOV     R3,#0FFH
0060 7A00        R     MOV     R2,#HIGH ?SC_25
0062 7900        R     MOV     R1,#LOW ?SC_25
0064 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 112
0067 7F00              MOV     R7,#00H
0069 120000      E     LCALL   _LED_1_Write
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
006C 22                RET     
006D         ?C0008:
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 118
006D 7BFF              MOV     R3,#0FFH
006F 7A00        R     MOV     R2,#HIGH ?SC_34
0071 7900        R     MOV     R1,#LOW ?SC_34
0073 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 120
0076 7F00              MOV     R7,#00H
0078 120000      E     LCALL   _LED_1_Write
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
007B         ?C0013:
007B 22                RET     
             ; FUNCTION _UpdateButtonState (END)

             ; FUNCTION _UpdateSliderPosition (BEGIN)
                                           ; SOURCE LINE # 124
0000 900000      R     MOV     DPTR,#value
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 127
0005 900000      R     MOV     DPTR,#value
0008 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   MAIN                                                                  08/27/2015 14:51:36 PAGE 7   

0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B D3                SETB    C
000C 9450              SUBB    A,#050H
000E 4011              JC      ?C0014
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 130
0010 7D00              MOV     R5,#00H
0012 7F01              MOV     R7,#01H
0014 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 131
0017 7BFF              MOV     R3,#0FFH
0019 7A00        R     MOV     R2,#HIGH ?SC_49
001B 7900        R     MOV     R1,#LOW ?SC_49
001D 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 132
0020 22                RET     
0021         ?C0014:
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 136
0021 900000      R     MOV     DPTR,#value
0024 E0                MOVX    A,@DPTR
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 04                INC     A
0028 FF                MOV     R7,A
0029 900000      E     MOV     DPTR,#?_LCD_Char_1_DrawHorizontalBG?BYTE+03H
002C EF                MOV     A,R7
002D F0                MOVX    @DPTR,A
002E 7B10              MOV     R3,#010H
0030 7D00              MOV     R5,#00H
0032 7F01              MOV     R7,#01H
0034 120000      E     LCALL   _LCD_Char_1_DrawHorizontalBG
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
0037         ?C0016:
0037 22                RET     
             ; FUNCTION _UpdateSliderPosition (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =     66    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
